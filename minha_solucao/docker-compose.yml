version: '3.5'
services:
  api1: # API - Instância 01
    image: "rinha-application"
    build: 
      context: .
      dockerfile: ./Dockerfile
    environment:
      API_ID: api1    
    hostname: api1
    network_mode: "host"
    command: bash -c "alembic upgrade head && gunicorn main:app -b 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker"
    depends_on:
      db:
        condition: service_healthy      
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: '0.6GB'

  api2: # API - Instância 02
    image: "rinha-application"
    build: 
      context: .
      dockerfile: ./Dockerfile
    environment:
      API_ID: api2
    hostname: api1
    network_mode: "host"
    command: bash -c "gunicorn main:app -b 0.0.0.0:8001 -k uvicorn.workers.UvicornWorker"
    depends_on:
      db:
        condition: service_healthy      
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: '0.6GB'

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    network_mode: "host"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.3GB'

  db: # Banco de dados
    image: postgres:16
    network_mode: "host"
    environment:
      POSTGRES_PASSWORD: "appdb2023!"
    command: postgres -c 'max_connections=450'     
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5      
    deploy:
      resources:
        limits:
          cpus: '0.7' #0.45
          memory: '1.5GB' #1.7
